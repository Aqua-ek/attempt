"""Add type_id to votes

Revision ID: 993a881f073f
Revises: 76d7be5856c2
Create Date: 2025-08-15 22:42:58.067254

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '993a881f073f'
down_revision: Union[str, Sequence[str], None] = '76d7be5856c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('answer votes')
    op.add_column('votes', sa.Column('votetype', sa.String(length=50), nullable=False))
    op.add_column('votes', sa.Column('type_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('unique_user_vote'), 'votes', type_='unique')
    op.create_unique_constraint('unique_user_vote', 'votes', ['user_id', 'type_id', 'votetype'])
    op.drop_constraint(op.f('votes_quest_id_fkey'), 'votes', type_='foreignkey')
    op.drop_column('votes', 'quest_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('votes', sa.Column('quest_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('votes_quest_id_fkey'), 'votes', 'questions', ['quest_id'], ['qstid'])
    op.drop_constraint('unique_user_vote', 'votes', type_='unique')
    op.create_unique_constraint(op.f('unique_user_vote'), 'votes', ['user_id', 'quest_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('votes', 'type_id')
    op.drop_column('votes', 'votetype')
    op.create_table('answer votes',
    sa.Column('voteid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quest_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ans_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('votetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ans_id'], ['answers.answid'], name=op.f('answer votes_ans_id_fkey')),
    sa.ForeignKeyConstraint(['quest_id'], ['questions.qstid'], name=op.f('answer votes_quest_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('answer votes_user_id_fkey')),
    sa.PrimaryKeyConstraint('voteid', name=op.f('answer votes_pkey')),
    sa.UniqueConstraint('user_id', 'ans_id', name=op.f('unique_answer_vote'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
